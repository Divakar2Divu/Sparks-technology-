# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1icMD6HeC4iDPgZMnx24yG9yKRla7FNMl
"""

# 1. Write a Python function to multiply all the numbers in a list.
def multiply_numbers(numbers):
  result = 1
  for num in numbers:
    result *= num
  return result
# Example usage
numbers_list = [7, 8, 9]
print("Product of all numbers:", multiply_numbers(numbers_list))

#2. Write a Python function to reverse a string use the while loop also?
def reverse_string(text):
  reversed_text = ""
  i = len(text)
  while i:
    i -= 1
    reversed_text += text[i]
  return reversed_text
print(reverse_string("Random"))

# 3. Write a function to add and subtract two variables
def add_and_subtract(x, y):
  return x + y, x - y
a, b = 10, 5
sum_result, diff_result = add_and_subtract(a, b)
print("Sum:", sum_result)
print("Difference:", diff_result)

# 4. Write a function to check the number is divisible by 12
def is_divisible_by_12(number):
  if number % 12 == 0:
   return True
  else:
    return False
num = 36
if is_divisible_by_12(num):
  print(num, "is divisible by 12")
else:
  print(num, "is not divisible by 12")

# 5. Write a function to calculate the number of days and weeks
def calculate_weeks_and_days(total_days):
  weeks = total_days // 7 # Calculate the number of weeks
  days = total_days % 7 # Calculate the remaining days
  return weeks, days
# Example usage
number_of_days = 15
weeks, days = calculate_weeks_and_days(number_of_days)
print("Weeks:", weeks)
print("Days:", days)

# 6. Write a Python function to Find the 5!?
def factorial(n):
  result = 1
  for i in range(1, n + 1):
    result = result * i
  return result
print("5! =", factorial(5))

# 7. Write a Python function Find the unique elements of the first list =
[1,2,3,3,3,3,4,5,4,2,4,2,4,4,2,4,5,4,34,654,5,7,6,5,4,3,]
def find_unique_elements(input_list):
  unique_elements = []
  for item in input_list:
    if item not in unique_elements:
      unique_elements.append(item)
  return unique_elements
first_list = [1, 2, 3, 3, 3, 3, 4, 5, 4, 2, 4, 2, 4, 4, 2, 4, 5, 4, 34, 654, 5, 7, 6, 5, 4, 3]
unique_values = find_unique_elements(first_list)
print("Unique elements:", unique_values)

# 8. Required arguments: (the function simple_interest accepts three arguments and returns the simple interest accordingly)
def simple_interest(principal, rate, time):
  interest = (principal * rate * time) / 100
  return interest
p = 1000
r = 5
t = 3
interest = simple_interest(p, r, t)
print("Simple Interest:", interest)

# 9. Keyword arguments:(Function is called with the name and message as the keyword arguments)
def greet(name, message):
  print("Hello,", name + "!")
  print(message)
# Example usage with keyword arguments
greet(name="Ram", message="Happy Diwali!")

# 10. Default Arguments:()
def greet(name, message="Welcome to the program!"):
  print("Hello,", name + "!")
  print(message)
# Example usage
greet("Ram") # Calls the function with the default message
greet("Lakhan", "Hope you have a great day!") # Calls the function with a custom message

# 11. Write a lambda function to find the sum of two numbers
add = lambda x, y: x + y
result = add(5, 3)
print("Sum:", result)

#12. Adding two lists using map lis1 = [12, 24, 36] and lis2 = [41, 54, 69]
# Given lists
lis1 = [12, 24, 36]
lis2 = [41, 54, 69]
result = list(map(lambda x, y: x + y, lis1, lis2))
print("Sum of two lists:", result)

# 13. Filter the lis1 = [3,12, 24, 36,43,654,65432,2,654,455,43,543] which is not divided by 2?
lis1 = [3, 12, 24, 36, 43, 654, 65432, 2, 654, 455, 43, 543]
not_divisible_by_2 = list(filter(lambda x: x % 2 != 0, lis1))
print("Numbers not divisible by 2:", not_divisible_by_2)

